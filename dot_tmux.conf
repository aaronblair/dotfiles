# Change prefix to C-a
unbind C-b
set -g prefix C-a

# Repeat C-a to send prefix to nested tmux
bind C-a send-prefix

# Switch between alternate windows
unbind l
bind a last-window

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -g escape-time 20

# increase scrollback buffer size
set -g history-limit 10000

# tmux messages are displayed for 3 seconds
set -g display-time 3000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 15

# upgrade $TERM
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',alacritty:RGB'

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Use vim keybindings in copy mode
setw -g mode-keys vi

# In copy mode use v to trigger selection
bind-key -T copy-mode-vi v send-keys -X begin-selection

# In copu mode use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Start window & pane indexing at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Renumber windows when one is killed
set-option -g renumber-windows on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Reload tmux config w/ C-r
bind r source-file ~/.tmux.conf 

# Create new pane w/ current directory (instead of home dir)
bind c new-window -c '#{pane_current_path}'

# Use C-\ andn C-- to split windows
unbind '"'
unbind %
bind '\' split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Use C-| andn C-_ to split windows full width
bind | split-window -fh -c '#{pane_current_path}'
bind _ split-window -fv -c '#{pane_current_path}'

# Break pane into new window C-b
bind b break-pane -d

# Swap windows using C-< and C->
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-h resize-pane -L 10
bind -r C-l resize-pane -R 10

# Join panes = horizontal, + vertical
bind = choose-window 'join-pane -h -s "%%"'
bind + choose-window 'join-pane -s "%%"'

# present a menu of URLs to open from the visible pane. sweet.
bind u capture-pane \;\
    save-buffer /tmp/tmux-buffer \;\
    split-window -l 10 "urlview /tmp/tmux-buffer"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Not sure, but it's apparently required
set-option -g allow-passthrough on

##### STYLE #####

# loud or quiet?
set -g visual-activity on
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity on
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour5' #fg was 9

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour18 fg=colour21'

#   left
set -g status-left ''
set -g status-left-length 20

#   right
set -g status-right ' #{?client_prefix,#[fg=default#,bg=default] ^a ,}#{?#{!=:#{selection_present},},#[fg=colour18#,bg=colour3] COPY ,}#[fg=colour0,bg=colour1] #{=11:session_name}@#{=10:host_short} '
set -g status-right-length 52

setw -g window-status-current-style 'fg=colour21 bg=colour19 bold'
setw -g window-status-current-format ' #[fg=colour1]#I #[fg=default]#W#[fg=colour7]#F '

setw -g window-status-style 'fg=colour20 bg=colour18 dim'
setw -g window-status-format ' #[fg=colour1]#I #[fg=colour20]#W#[fg=default]#F '

# status activity - make the # slightly lighter
setw -g window-status-activity-style 'bg=default fg=colour21'

# status bell - make yellow
setw -g window-status-bell-style 'fg=colour3 bg=default'

# messages
set -g message-style 'fg=colour18 bg=colour4 bold'
